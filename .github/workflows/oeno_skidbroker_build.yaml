name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
   branches:
     - dev
     - integration
  workflow_call:
    inputs:
      input_from_caller:
        type: string

    secrets:
      envPAT:
        required: true
        
      sign_cert:
        required: true
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  #BUCKET_NAME : "github-oidc-test-mitch"
  AWS_REGION : "us-east-1"
  PROJECT_FILES_GIT : "beer-project-properties.git"
  ORGANIZATION: "pallcorporation"
  PROJECT_FILES_NAME: "project.properties"
  PROJECT_FILES_DIRECTORY: "project_file"
  CDK_MODULE: "cdk_checkedout"
  DEVOPS_STORE: "devops_store"

  

permissions:
      id-token: write
      contents: read    # This is required for actions/checkout@v1
      packages: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:  
  AWS-WIN-EXE-BUILD:
    if: github.repository != 'pallcorporation/digital-iot-devops-store'
    runs-on: windows-2019
      
    steps:
        # Get current time stamp to use as reference elsewhere
        - name: Get current date
          id: date
          run: echo "::set-output name=date::$(date +'%Y%m%dT%H%M%S')"  
        
        - name: Git clone the repository
          uses: actions/checkout@v2
        
        - name: Set up env
          run: |
            git status
            pip install pyinstaller
            pyinstaller --version
            cd "C:\"Program Files (x86)"\"Windows Kits"\10\bin\x64\"
            ls
            C:\"Program Files (x86)"\"Windows Kits"\10\bin\x64\signtool --version

            


  
        
        
        # Upload a file to AWS s3
        # - name:  Deploy to S3 - Copy Build folder to s3
        # #  if: ${{ steps.skip_everything.outputs.skip_everything1 != 'true' && steps.skip_npm.outputs.bypass_npm !='true' && steps.get_deployment_type.outputs.deployment_type == 'web' && steps.get_cdk_destroy_stack.outputs.cdk_destroy_stack != 'true' }}
        #   run: |
        #     aws s3 cp urls.json s3://${{inputs.hosting_bucket}}-${{env.AWS_ENV_NAME}}




        

